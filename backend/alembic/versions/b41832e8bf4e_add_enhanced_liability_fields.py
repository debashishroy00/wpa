"""Add enhanced liability fields

Revision ID: b41832e8bf4e
Revises: add_asset_breakdown
Create Date: 2025-08-18 16:17:39.378669

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b41832e8bf4e'
down_revision = 'add_asset_breakdown'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('monte_carlo_simulations')
    op.drop_table('recommendation_actions')
    op.drop_index('idx_user_analyses', table_name='intelligence_analyses')
    op.drop_table('intelligence_analyses')
    op.add_column('financial_entries', sa.Column('interest_rate', sa.Numeric(precision=5, scale=3), nullable=True))
    op.add_column('financial_entries', sa.Column('loan_term_months', sa.Integer(), nullable=True))
    op.add_column('financial_entries', sa.Column('remaining_months', sa.Integer(), nullable=True))
    op.add_column('financial_entries', sa.Column('minimum_payment', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('financial_entries', sa.Column('is_fixed_rate', sa.Boolean(), nullable=True))
    op.add_column('financial_entries', sa.Column('loan_start_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('financial_entries', sa.Column('original_amount', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('financial_entries', sa.Column('loan_details', sa.Text(), nullable=True))
    op.alter_column('financial_entries', 'real_estate_percentage',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('financial_entries', 'stocks_percentage',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('financial_entries', 'bonds_percentage',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('financial_entries', 'alternative_percentage',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('financial_entries', 'details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_preferences', 'work_flexibility',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_preferences', 'esg_investing',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_preferences', 'tax_loss_harvesting',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_preferences', 'roth_ira_eligible',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_preferences', 'roth_ira_eligible',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=True)
    op.alter_column('user_preferences', 'tax_loss_harvesting',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.alter_column('user_preferences', 'esg_investing',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.alter_column('user_preferences', 'work_flexibility',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text('\'{"part_time": false, "consulting": false}\'::jsonb'),
               existing_nullable=True)
    op.alter_column('financial_entries', 'details',
               existing_type=sa.Text(),
               server_default=sa.text("'{}'::jsonb"),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('financial_entries', 'alternative_percentage',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('financial_entries', 'bonds_percentage',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('financial_entries', 'stocks_percentage',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('financial_entries', 'real_estate_percentage',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.drop_column('financial_entries', 'loan_details')
    op.drop_column('financial_entries', 'original_amount')
    op.drop_column('financial_entries', 'loan_start_date')
    op.drop_column('financial_entries', 'is_fixed_rate')
    op.drop_column('financial_entries', 'minimum_payment')
    op.drop_column('financial_entries', 'remaining_months')
    op.drop_column('financial_entries', 'loan_term_months')
    op.drop_column('financial_entries', 'interest_rate')
    op.create_table('intelligence_analyses',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('overall_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('success_probability', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('gaps', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('conflicts', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('scenarios', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommendations', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('selected_scenario_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='intelligence_analyses_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='intelligence_analyses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_user_analyses', 'intelligence_analyses', ['user_id', 'created_at'], unique=False)
    op.create_table('recommendation_actions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('recommendation_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='recommendation_actions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='recommendation_actions_pkey')
    )
    op.create_table('monte_carlo_simulations',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('scenario_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('iterations', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('success_rate', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('p10_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('p25_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('p50_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('p75_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('p90_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['intelligence_analyses.id'], name='monte_carlo_simulations_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='monte_carlo_simulations_pkey')
    )
    # ### end Alembic commands ###