# ULTRA-MINIMAL Dockerfile for Render/Railway Deployment
# NO ML, NO CUDA, NO GPU dependencies
# Target: <256MB memory usage

FROM python:3.11-slim

# Set Python optimization flags for lower memory usage
ENV PYTHONOPTIMIZE=2 \
    PYTHONUNBUFFERED=1 \
    MALLOC_ARENA_MAX=2 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    # Explicitly disable CUDA
    CUDA_VISIBLE_DEVICES="" \
    USE_CUDA=0 \
    # Vector storage settings (disabled for now)
    DISABLE_VECTOR_DB=true \
    IS_PERSISTENT=TRUE

WORKDIR /app

# Install minimal system dependencies ONLY
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy and install Python dependencies
COPY requirements-deploy.txt .

# Install with explicit no-cache and no-deps where possible
RUN pip install --no-cache-dir --no-compile --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --no-compile -r requirements-deploy.txt && \
    # Clean up any accidentally installed ML packages
    pip uninstall -y torch tensorflow transformers sentence-transformers \
                     nvidia-cudnn-cu11 nvidia-cuda-runtime nvidia-cuda-nvrtc \
                     nvidia-cuda-cupti nvidia-cublas nvidia-cudnn \
                     hnswlib numpy faiss-cpu faiss chromadb 2>/dev/null || true && \
    # Remove pip cache
    rm -rf /root/.cache/pip && \
    # Remove any __pycache__ directories
    find /usr/local -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true

# Create necessary directories with proper permissions
RUN mkdir -p /tmp/vector_db /app/logs && \
    chmod 777 /tmp/vector_db /app/logs

# Copy application code
COPY . .

# Remove any ML-related files to save space
RUN rm -rf models/ weights/ checkpoints/ *.pkl *.h5 *.bin *.pth 2>/dev/null || true

# Create startup script
RUN echo '#!/bin/bash\n\
export PYTHONOPTIMIZE=2\n\
export PYTHONUNBUFFERED=1\n\
export MALLOC_ARENA_MAX=2\n\
export CUDA_VISIBLE_DEVICES=""\n\
export USE_CUDA=0\n\
export DISABLE_VECTOR_DB=true\n\
echo "========================================"\n\
echo "WealthPath AI - ULTRA-MINIMAL Mode"\n\
echo "Memory Target: <256MB"\n\
echo "NO ML/CUDA packages loaded"\n\
echo "========================================"\n\
exec uvicorn app.main:app \
    --host 0.0.0.0 \
    --port ${PORT:-8000} \
    --workers 1 \
    --limit-max-requests 500 \
    --limit-concurrency 10 \
    --loop asyncio \
    --no-access-log' > /app/start.sh && \
    chmod +x /app/start.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD python -c "import httpx; httpx.get('http://localhost:${PORT:-8000}/health')" || exit 1

# Run with memory-optimized settings
CMD ["/app/start.sh"]